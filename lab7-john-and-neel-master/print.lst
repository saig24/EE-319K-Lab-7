


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 PRESERVE8
   19 00000000                 THUMB
   20 00000000         
   21 00000000         
   22 00000000         
   23 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   24 00000000         ; Output a 32-bit number in unsigned decimal format
   25 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   26 00000000         ; Output: none
   27 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   28 00000000         LCD_OutDec
   29 00000000 F04F 030A       MOV              R3,#10      ;
   30 00000004 FBB0 F1F3       UDIV             R1,R0,R3    ;  ;divide R0(input
                                                            ) by 10
   31 00000008 FB01 F303       MUL              R3,R1,R3
   32 0000000C 1AC2            SUBS             R2,R0,R3    ;calculate remainde
                                                            r of r0/10
   33 0000000E F102 0230       ADD              R2,R2,#0X30 ; ; add x30 to calc
                                                            ulate ascii value o
                                                            f integer
   34 00000012 B404            PUSH{R2}
   35 00000014 3100            ADDS             R1,#0       ;   ; check if quot
                                                            ient of division is
                                                             0, exit if that's 
                                                            the case
   36 00000016 D021            BEQ              finish
   37 00000018         
   38 00000018 F04F 030A       MOV              R3,#10
   39 0000001C FBB1 F2F3       UDIV             R2,R1,R3    ;
   40 00000020 FB02 F303       MUL              R3,R2,R3
   41 00000024 1ACC            SUBS             R4,R1,R3
   42 00000026 F104 0430       ADD              R4,R4,#0X30 ;
   43 0000002A B410            PUSH{R4}
   44 0000002C 3100            ADDS             R1,#0       ;
   45 0000002E D015            BEQ              finish



ARM Macro Assembler    Page 2 


   46 00000030         
   47 00000030 F04F 030A       MOV              R3,#10
   48 00000034 FBB2 F1F3       UDIV             R1,R2,R3    ;
   49 00000038 FB01 F303       MUL              R3,R1,R3
   50 0000003C 1AD2            SUBS             R2,R2,R3
   51 0000003E F102 0230       ADD              R2,R2,#0X30 ;
   52 00000042 B404            PUSH{R2}
   53 00000044 3100            ADDS             R1,#0       ;
   54 00000046 D009            BEQ              finish
   55 00000048         
   56 00000048 FBB0 F1F3       UDIV             R1,R0,R3    ;
   57 0000004C FB01 F303       MUL              R3,R1,R3
   58 00000050 1AC2            SUBS             R2,R0,R3
   59 00000052 F102 0230       ADD              R2,R2,#0X30 ;
   60 00000056 B404            PUSH{R2}
   61 00000058 3100            ADDS             R1,#0       ;
   62 0000005A D0FF            BEQ              finish
   63 0000005C         
   64 0000005C         
   65 0000005C         
   66 0000005C         
   67 0000005C         
   68 0000005C BC07    finish  POP{R0,R1,R2}
   69 0000005E F7FF FFFE       BL               ST7735_OutChar
   70 00000062 4408            ADD              R0,R1       ;
   71 00000064 F7FF FFFE       BL               ST7735_OutChar
   72 00000068 4410            ADD              R0,R2       ;
   73 0000006A F7FF FFFE       BL               ST7735_OutChar
   74 0000006E         
   75 0000006E         
   76 0000006E         
   77 0000006E         
   78 0000006E         
   79 0000006E         
   80 0000006E 4770            BX               LR
   81 00000070         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   82 00000070         
   83 00000070         ; -----------------------LCD _OutFix--------------------
                       --
   84 00000070         ; Output characters to LCD display in fixed-point format
                       
   85 00000070         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   86 00000070         ; Inputs:  R0 is an unsigned 32-bit number
   87 00000070         ; Outputs: none
   88 00000070         ; E.g., R0=0,    then output "0.000 "
   89 00000070         ;       R0=3,    then output "0.003 "
   90 00000070         ;       R0=89,   then output "0.089 "
   91 00000070         ;       R0=123,  then output "0.123 "
   92 00000070         ;       R0=9999, then output "9.999 "
   93 00000070         ;       R0>9999, then output "*.*** "
   94 00000070         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   95 00000070         LCD_OutFix
   96 00000070         
   97 00000070 4770            BX               LR
   98 00000072         
   99 00000072 00 00           ALIGN
  100 00000074         ;* * * * * * * * End of LCD_OutFix * * * * * * * *



ARM Macro Assembler    Page 3 


  101 00000074         
  102 00000074                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  103 00000074                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --list
=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 28 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 00000070

Symbol: LCD_OutFix
   Definitions
      At line 95 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
finish 0000005C

Symbol: finish
   Definitions
      At line 68 in file Print.s
   Uses
      At line 36 in file Print.s
      At line 45 in file Print.s
      At line 54 in file Print.s
      At line 62 in file Print.s

4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 69 in file Print.s
      At line 71 in file Print.s
      At line 73 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
338 symbols in table
