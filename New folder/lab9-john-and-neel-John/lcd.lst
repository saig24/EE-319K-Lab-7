


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: John Sigmon and Neel Kattumadam
    3 00000000         ; Last modification date: You're silly
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000         
   31 00000000                 EXPORT           writecommand
   32 00000000                 EXPORT           writedata
   33 00000000         
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB
   36 00000000                 ALIGN
   37 00000000         
   38 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   39 00000000         ; sent.  The SSI module has hardware input and output FI



ARM Macro Assembler    Page 2 


                       FOs
   40 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   41 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   42 00000000         ; lot of data, the FIFOs are not used when writing
   43 00000000         ; commands, and they are used when writing data.  This
   44 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   45 00000000         ; that is actually being transmitted.
   46 00000000         ; The write command operation waits until all data has b
                       een
   47 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   48 00000000         ; the command, and then waits for the transmission to
   49 00000000         ; finish.
   50 00000000         ; The write data operation waits until there is room in 
                       the
   51 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   52 00000000         ; and then adds the data to the transmit FIFO.
   53 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   54 00000000         ; the SSI0 module is not initialized and enabled.
   55 00000000         
   56 00000000         
   57 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   58 00000000         ; Input: R0  8-bit command to transmit
   59 00000000         ; Output: none
   60 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   61 00000000         
   62 00000000         writecommand
   63 00000000         
   64 00000000 4A0F            LDR              R2,=SSI0_SR_R
   65 00000002 6811    Check1  LDR              R1,[R2]
   66 00000004 F001 0110       AND              R1,#0x10
   67 00000008 2910            CMP              R1,#0x10
   68 0000000A D0FA            BEQ              Check1
   69 0000000C         
   70 0000000C 4A0D            LDR              R2,=DC
   71 0000000E F001 0100       AND              R1,#0x00
   72 00000012 6011            STR              R1,[R2]
   73 00000014 4A0C            LDR              R2,=SSI0_DR_R
   74 00000016 7010            STRB             R0,[R2]
   75 00000018 4A09            LDR              R2,=SSI0_SR_R
   76 0000001A         
   77 0000001A 6811    Check2  LDR              R1,[R2]
   78 0000001C F001 0110       AND              R1,#0x10
   79 00000020 2910            CMP              R1,#0x10
   80 00000022 D0FA            BEQ              Check2
   81 00000024         
   82 00000024 4770            BX               LR          ;   return
   83 00000026         
   84 00000026         
   85 00000026         
   86 00000026         
   87 00000026         



ARM Macro Assembler    Page 3 


   88 00000026         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   89 00000026         ; Input: R0  8-bit data to transmit
   90 00000026         ; Output: none
   91 00000026         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   92 00000026         
   93 00000026         writedata
   94 00000026         ;; --UUU-- Code to write data to the LCD
   95 00000026         ;1) Read SSI0_SR_R and check bit 1, 
   96 00000026         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   97 00000026         ;3) Set D/C=PA6 to one
   98 00000026         ;4) Write the 8-bit data to SSI0_DR_R
   99 00000026         
  100 00000026 4A06            LDR              R2,=SSI0_SR_R
  101 00000028 6811    Check3  LDR              R1,[R2]
  102 0000002A F001 0102       AND              R1,#0x02
  103 0000002E 2900            CMP              R1,#0
  104 00000030 D0FA            BEQ              Check3
  105 00000032         
  106 00000032 4A04            LDR              R2,=DC
  107 00000034 F04F 0140       LDR              R1,=DC_DATA
  108 00000038         
  109 00000038 7011            STRB             R1,[R2]
  110 0000003A 4A03            LDR              R2,=SSI0_DR_R
  111 0000003C 6010            STR              R0,[R2]
  112 0000003E         
  113 0000003E 4770            BX               LR          ;   return
  114 00000040         
  115 00000040         
  116 00000040         
  117 00000040         ;***************************************************
  118 00000040         ; This is a library for the Adafruit 1.8" SPI display.
  119 00000040         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  120 00000040         ; ----> http://www.adafruit.com/products/358
  121 00000040         ; as well as Adafruit raw 1.8" TFT display
  122 00000040         ; ----> http://www.adafruit.com/products/618
  123 00000040         ;
  124 00000040         ; Check out the links above for our tutorials and wiring
                        diagrams
  125 00000040         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  126 00000040         ; interface (RST is optional)
  127 00000040         ; Adafruit invests time and resources providing this ope
                       n source code,
  128 00000040         ; please support Adafruit and open-source hardware by pu
                       rchasing
  129 00000040         ; products from Adafruit!
  130 00000040         ;
  131 00000040         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  132 00000040         ; MIT license, all text above must be included in any re
                       distribution
  133 00000040         ;****************************************************
  134 00000040         
  135 00000040                 ALIGN                        ; make sure the end
                                                             of this section is



ARM Macro Assembler    Page 4 


                                                             aligned
  136 00000040                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --predefine="__EVAL SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file LCD.s
   Uses
      None
Comment: .text unused
Check1 00000002

Symbol: Check1
   Definitions
      At line 65 in file LCD.s
   Uses
      At line 68 in file LCD.s
Comment: Check1 used once
Check2 0000001A

Symbol: Check2
   Definitions
      At line 77 in file LCD.s
   Uses
      At line 80 in file LCD.s
Comment: Check2 used once
Check3 00000028

Symbol: Check3
   Definitions
      At line 101 in file LCD.s
   Uses
      At line 104 in file LCD.s
Comment: Check3 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 62 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: writecommand used once
writedata 00000026

Symbol: writedata
   Definitions
      At line 93 in file LCD.s
   Uses
      At line 32 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 70 in file LCD.s
      At line 106 in file LCD.s

DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 107 in file LCD.s
Comment: DC_DATA used once
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 73 in file LCD.s
      At line 110 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 64 in file LCD.s
      At line 75 in file LCD.s
      At line 100 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      None
Comment: SSI_SR_BSY unused
SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses
      None



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: SSI_SR_TNF unused
8 symbols
347 symbols in table
